package inheritance_ex1;
import java.time.LocalDate;
public class MainTest {

	public static void main(String[] args) {
		//create object instance of GenericItem called genericItem
        //call all the methods to set up the object and print that object info
		GenericItem genericItem = new GenericItem(); //Call default constructor generated by compiler

		genericItem.setName("newItem");
		genericItem.setQuantity(1);
		genericItem.printItem();
		
		
		//create object instance of ProduceItem called milks
		//set expiration date by using LocalDate object and methods
		//https://docs.oracle.com/javase/tutorial/datetime/iso/date.html
		//https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/LocalDate.html

		//ProduceItem milks = new ProduceItem();
		DairyItem milks = new DairyItem("milks");
		//milks.setName("milks"); //call setName() method inherited from super class
		milks.setQuantity(100); 
		milks.printItem(); //call the printItem() method defined in GenericItem class
		milks.setPercentageFat(2);

		LocalDate dateOfProduction = LocalDate.of(2023, 9, 15); //set up a production date
		LocalDate dateOfExpiration = dateOfProduction.plusMonths(1).plusDays(5); 
		milks.setExpiration(dateOfExpiration.toString()); //From objects class, not from superclass
		System.out.println(milks.getExpiration()); //returns a string from the objects class, not from superclass

		//call all the methods to set up the object and print that object info
		System.out.println(milks);		
		
	}

}

